<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="org.activiti.persistence">
  <!--  Task Search -->
  <select id="customSearchTasks" parameterType="net.emforge.activiti.query.CustomTaskQueryImpl" resultMap="taskResultMap">
    select distinct T.*
    <include refid="customSearchTasksSql"/>
    <if test="orderBy != null">
      order by ${orderBy}
    </if>
  </select>
  
  <!-- TASK RESULTMAP (This is taken from Task.xml) -->
  
  <resultMap id="taskResultMap" type="org.activiti.engine.impl.persistence.entity.TaskEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR"/>
    <result property="revision" column="REV_" jdbcType="INTEGER"/>
    <result property="nameWithoutCascade" column="NAME_" jdbcType="VARCHAR"/>
    <result property="parentTaskIdWithoutCascade" column="PARENT_TASK_ID_" jdbcType="VARCHAR"/>
    <result property="descriptionWithoutCascade" column="DESCRIPTION_" jdbcType="VARCHAR"/>
    <result property="priorityWithoutCascade" column="PRIORITY_" jdbcType="INTEGER"/>
    <result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP" />
    <result property="ownerWithoutCascade" column="OWNER_" jdbcType="VARCHAR"/>
    <result property="assigneeWithoutCascade" column="ASSIGNEE_" jdbcType="VARCHAR"/>
    <result property="delegationStateString" column="DELEGATION_" jdbcType="VARCHAR"/>
    <result property="executionId" column="EXECUTION_ID_" jdbcType="VARCHAR" />
    <result property="processInstanceId" column="PROC_INST_ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionId" column="PROC_DEF_ID_" jdbcType="VARCHAR"/>
    <result property="taskDefinitionKeyWithoutCascade" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
    <result property="dueDateWithoutCascade" column="DUE_DATE_" jdbcType="TIMESTAMP"/>
  </resultMap>

  <select id="customSearchTasksCount" parameterType="net.emforge.activiti.query.CustomTaskQueryImpl" resultType="long">
    select count(distinct T.ID_)
    <include refid="customSearchTasksSql"/>
  </select>

	<sql id="customSearchTasksSql">
		from ACT_RU_TASK T
	    <if test="candidateUser != null || candidateGroups != null">
	      inner join ACT_RU_IDENTITYLINK I on I.TASK_ID_ = T.ID_
	    </if>
    	<if test="entryClassName != null">
    	  inner join ACT_RU_VARIABLE V1 on (T.ID_ = V1.TASK_ID_ or V1.PROC_INST_ID_ = T.PROC_INST_ID_) and V1.NAME_= 'entryClassName'
	    </if>
	    
    	<where>
	      <if test="nameLike != null">
	        and T.NAME_ like #{nameLike}
	      </if>
	      <if test="assignee != null">
	        and T.ASSIGNEE_ = #{assignee}
	      </if>

	      <if test="candidateUser != null || candidateGroups != null">
	        and T.ASSIGNEE_ is null
	        and I.TYPE_ = 'candidate'
	        and 
	        ( 
	          <if test="candidateUser != null">
	            I.USER_ID_ = #{candidateUser}          
	          </if>

	          <if test="candidateUser != null &amp;&amp; candidateGroups != null &amp;&amp; candidateGroups.size() &gt; 0">
	            or
	          </if>
	          <if test="candidateGroups != null &amp;&amp; candidateGroups.size() &gt; 0">
	            I.GROUP_ID_ IN
	            <foreach item="group" index="index" collection="candidateGroups" 
	                     open="(" separator="," close=")">
	              #{group}
	            </foreach>
	          </if>
	        )
	      </if>
    	
	    	<if test="entryClassName != null">
	    	  and V1.TEXT_ =  #{entryClassName}
		    </if>
	    </where>
	</sql>

  <!--  Historic Task Search -->
  <select id="customSearchHistoricTaskInstance" parameterType="net.emforge.activiti.query.CustomHistoricTaskInstanceQueryImpl" resultMap="historicTaskInstanceResultMap">
    select *
    <include refid="customSearchHistoricTaskInstanceSql"/>
    <if test="orderBy != null">
      order by ${orderBy}
    </if>
  </select>
  
  <!-- HISTORIC TASK INSTANCE RESULT MAP -->

  <resultMap id="historicTaskInstanceResultMap" type="org.activiti.engine.impl.persistence.entity.HistoricTaskInstanceEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionId" column="PROC_DEF_ID_" jdbcType="VARCHAR" />
    <result property="processInstanceId" column="PROC_INST_ID_" jdbcType="VARCHAR" />
    <result property="executionId" column="EXECUTION_ID_" jdbcType="VARCHAR" />
    <result property="name" column="NAME_" jdbcType="VARCHAR" />
    <result property="parentTaskId" column="PARENT_TASK_ID_" jdbcType="VARCHAR" />
    <result property="description" column="DESCRIPTION_" jdbcType="VARCHAR" />
    <result property="owner" column="OWNER_" jdbcType="VARCHAR" />
    <result property="assignee" column="ASSIGNEE_" jdbcType="VARCHAR" />
    <result property="startTime" column="START_TIME_" jdbcType="TIMESTAMP" />
    <result property="endTime" column="END_TIME_" jdbcType="TIMESTAMP" />
    <result property="durationInMillis" column="DURATION_" jdbcType="BIGINT" />
    <result property="deleteReason" column="DELETE_REASON_" jdbcType="VARCHAR" />
    <result property="taskDefinitionKey" column="TASK_DEF_KEY_" jdbcType="VARCHAR" />
    <result property="priority" column="PRIORITY_" jdbcType="INTEGER" />
    <result property="dueDate" column="DUE_DATE_" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="customSearchHistoricTaskInstanceCount" parameterType="net.emforge.activiti.query.CustomHistoricTaskInstanceQueryImpl" resultType="long">
    select count(*)
    <include refid="customSearchHistoricTaskInstanceSql"/>
  </select>
  
  <sql id="customSearchHistoricTaskInstanceSql">
    from ACT_HI_TASKINST HTI
 	<if test="entryClassName != null">
   	  inner join ACT_PIE_LIFERAY APL on HTI.PROC_INST_ID_ = APL.process_instance_id
    </if>	
    <where>
      HTI.END_TIME_ is not null
      <if test="nameLike != null">
        and HTI.NAME_ like #{nameLike}
      </if>
      <if test="assignee != null">
        and HTI.ASSIGNEE_ = #{assignee}
      </if>
   	  <if test="entryClassName != null">
   	    and APL.class_name = #{entryClassName}
      </if>	
    </where>
  </sql>


</mapper>